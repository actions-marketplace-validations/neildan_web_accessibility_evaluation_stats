name: Web Accessibility Evaluation
on:
  push:
    branches: [$default-branch]
  pull_request:
    branches: [$default-branch]
author: A11yWatch
branding:
  icon: "shield"
  color: "gray-dark"
description: Powerful web accessibility testing, this tool only returns the evaluation, no actions involved
inputs:
  WEBSITE_URL:
    description: Website domain to scan
    required: true
  FIX:
    description: Attempt to apply recommendations to code.
    required: false
    default: false
  SITE_WIDE:
    description: Perform a site-wide scan.
    required: false
    default: false
  SITEMAP:
    description: Extend crawl with sitemap links.
    required: false
    default: false
  SUBDOMAINS:
    description: Include all subdomains.
    required: false
    default: false
  TLD:
    description: Include all TLD extensions.
    required: false
    default: false
  FAIL_TOTAL_COUNT:
    description: Use to fail the CI if the amount of issues of type errors and warnings is greater than the count.
    required: false
    default: 0
  FAIL_ERRORS_COUNT:
    description: Use to fail the CI if the amount of issues of type errors is greater than the count.
    required: false
    default: 0
  FAIL_WARNINGS_COUNT:
    description: Use to fail the CI if the amount of issues of type warnings is greater than the count.
    required: false
    default: 0
  LIST:
    description: Report the output to github as a pass or fail list.
    required: false
    default: false
  SLIM:
    description: Use a gRPC client to gather issues.
    required: false
    default: true
  UPGRADE:
    description: Upgrade the CLI to latest across runs.
    required: false
    default: false
outputs:
  amount_issues_total:
    description: "The amount of errors and warnings found on the page"
    value: ${{ steps.a11ywatch-results-generator.outputs.amount_issues_total }}
  amount_errors:
    description: "The amount of errors found on the page"
    value: ${{ steps.a11ywatch-results-generator.outputs.amount_errors }}
  amount_warnings:
    description: "The amount of warnings found on the page"
    value: ${{ steps.a11ywatch-results-generator.outputs.amount_warnings }}
  evaluation_status:
    description: "The status of end evaluation, show 'Success' or 'Fail'"
    value: ${{ steps.a11ywatch-results-generator.outputs.evaluation_status }}
  full_evaluation:
    description: "A full message with evaluation description"
    value: ${{ steps.a11ywatch-results-generator.outputs.full_evaluation }}
  json_full_result:
    description: "The issues descriptions found on the page"
    value: ${{ steps.get-result-json-issues.outputs.json_full_result }}
runs:
  using: composite
  steps:
    - uses: actions/checkout@v3.0.2
      if: ${{ inputs.FIX == 'true' }}
      with:
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        ref: ${{ github.event.pull_request.head.ref }}
        clean: false

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      shell: bash

    - uses: actions/cache@v3
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Cache cargo crates
      uses: actions/cache@v3
      id: cache-cargo
      env:
        cache-name: cache-cargo-crates
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ~/.cargo/bin/a11ywatch

    - name: Install Rust, Cargo-Update, Protobuf Compiler
      if: steps.cache-cargo.outputs.cache-hit != 'true'
      shell: bash
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update && sudo apt upgrade -y
        sudo apt install -y protobuf-compiler libprotobuf-dev

    - name: A11yWatch CLI Install
      if: ${{ inputs.SLIM == 'true' }}
      uses: baptiste0928/cargo-install@v1
      with:
        crate: a11ywatch_cli
        version: "0.10.2"
        features: "grpc"

    - name: A11yWatch CLI Install
      if: ${{ inputs.SLIM == 'false' }}
      uses: baptiste0928/cargo-install@v1
      with:
        crate: a11ywatch_cli
        version: "0.10.2"

    - name: Build A11yWatch Service
      shell: bash
      run: a11ywatch build --standalone --local ${{ inputs.UPGRADE == 'true' && '--upgrade' || '' }}

    - name: Start A11yWatch Service
      shell: bash
      run: a11ywatch start --standalone --local

    - name: A11yWatch Scan
      id: get-result-json-issues
      if: ${{ inputs.SITE_WIDE == 'false' }}
      shell: bash
      run: |
        result_json="$(a11ywatch scan --url ${{ inputs.WEBSITE_URL }} --save ${{ inputs.FIX == 'true' && '--fix' || '' }})"
        echo "json_full_result=$(echo ${result_json})" >> $GITHUB_OUTPUT

    - name: A11yWatch Crawl
      if: ${{ inputs.SITE_WIDE == 'true' }}
      shell: bash
      run: a11ywatch crawl --url ${{ inputs.WEBSITE_URL }} ${{ inputs.SUBDOMAINS == 'true' && '--subdomains' || '' }} ${{ inputs.TLD == 'true' && '--tld' || ''}} ${{ inputs.SITEMAP == 'true' && '--sitemap' || '' }} --save ${{ inputs.FIX == 'true' && '--fix' || '' }}

    - name: Scan Results Check
      id: a11ywatch-results-generator
      shell: bash
      run: |
        # get results path
        results_path="$(a11ywatch --find-results)"

        website_issues_total=$(a11ywatch --results-issues)
        website_issues_errors=$(a11ywatch --results-issues-errors)
        website_issues_warnings=$(a11ywatch --results-issues-warnings)
        website_short_evaluation="success"
        website_long_evaluation=""

        total_limit=${{ inputs.FAIL_TOTAL_COUNT }}
        errors_limit=${{ inputs.FAIL_ERRORS_COUNT }}
        warnings_limit=${{ inputs.FAIL_WARNINGS_COUNT }}

        total_count=${total_limit:-0}
        errors_count=${errors_limit:-0}
        warnings_count=${warnings_limit:-0}

        if [ "$total_count" -gt 0 ]; then
          if [ $website_issues_total -gt "$total_count" ]; then
              website_short_evaluation="fail"
              website_long_evaluation="Failed accessibility test. $website_issues_total total errors and warnings exceeded limit!"
          fi
        fi

        if [ "$errors_count" -gt 0 ]; then
          if [ $website_issues_errors -gt "$errors_count" ]; then
              website_short_evaluation="fail"
              website_long_evaluation="Failed accessibility test. $website_issues_errors errors exceeded the limit!"
          fi
        fi

        if [ "$warnings_count" -gt 0 ]; then
          if [ $website_issues_warnings -gt "$warnings_count" ]; then
              website_short_evaluation="fail"
              website_long_evaluation="Failed accessibility test. $website_issues_warnings warnings exceeded limit!"
          fi
        fi

        echo "evaluation_status=$(echo ${website_short_evaluation})" >> $GITHUB_OUTPUT
        echo "full_evaluation=$(echo ${website_long_evaluation})" >> $GITHUB_OUTPUT
        echo "amount_issues_total=$(echo ${website_issues_total})" >> $GITHUB_OUTPUT
        echo "amount_errors=$(echo ${website_issues_errors})" >> $GITHUB_OUTPUT
        echo "amount_warnings=$(echo ${website_issues_warnings})" >> $GITHUB_OUTPUT

    - uses: EndBug/add-and-commit@v9
      if: ${{ inputs.FIX == 'true' }}
      with:
        message: "fix(accessibility): add recommendations from scan"
        committer_name: GitHub Actions

    - name: Stop A11yWatch Service
      shell: bash
      run: a11ywatch stop
